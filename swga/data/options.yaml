# This file is used to build the arguments to each subcommand, and to populate
# the default_parameters.cfg file in `swga init`.
#
# Only the `desc` and `default` fields are used in the .cfg file; all other
# fields are ignored. 
#
# Interpolation notes:
#   "{...}" entries are filled in by `swga init` 
#   "%(...)" entries are interpolated by the config parser
#   &xyz is a label, *xyz is a reference to that label resolved by the YAML
#   parser 
---
INTERNAL:
  fg_genome_fp: &fg "{fg_genome_fp}"
  bg_genome_fp: &bg "{bg_genome_fp}"
  exclude_fp: &exc "{exclude_fp}"
  fg_length: &fglen "{fg_length}"
  bg_length: &bglen "{bg_length}"
  min_fg_bind: &fgbind "{min_fg_bind}"
  max_bg_bind: &bgbind "{max_bg_bind}"
  primer_db: &primerdb primers.db

count:
  META:
    desc: >
      Count kmers in a foreground genome, then count those in a
      background genome, and add results to database
  primer_db:
    default: *primerdb
    desc: primer database name
  fg_genome_fp: 
    default: *fg
    desc: path to foreground (aka target) genome
  bg_genome_fp:
    default: *bg
    desc: path to background genome
  min_size:
    default: 5
    desc: minimum kmer size
    type: int
  max_size:
    default: 12
    desc: maximum kmer size
    type: int
  min_fg_bind:
    default: *fgbind
    desc: minimum number of primer binding sites on fg genome (default autofilled using genome length and binding rate of 1/100000)
    type: int
  max_bg_bind:
    default: *bgbind
    desc: maximum primer binding sites on bg genome (default autofilled using genome length and binding rate of 1/150000)
    type: int
  max_dimer_bp:
    default: 3
    desc: max number of consecutive complementary bases between a primer and its rev. complement
    type: int
  exclude_fp:
    default: *exc
    desc: >
      (FASTA) any primers appearing here above a threshold will be excluded
  exclude_threshold:
    default: 1
    desc: primers appearing >= this in exclude_fp will be excluded
    type: int
  input:
    default: null
    desc: a list of primers to manually add to the database
    type: File-r
    incfg: False
    

summary:
  META:
    desc: Summarizes current primer and sets database.
  primer_db:
    default: *primerdb
    desc: primer database name
  bg_length:
    default: *bglen
    desc: length of the background genome (autofilled by swga init)
    type: int
  fg_length:
    default: *fglen
    desc: length of the foreground genome (autofilled by swga init)
    type: int

filter: 
  META:
    desc: Activate suitable primers in a database
  input:
    default: null
    desc: "List of primers (one per line) to activate, instead of pulling from db"
    incfg: False
  skip_filtering:
    desc: "Skip filtering and simply mark the provided primers from --input as active"
    opttype: flag
  primer_db:
    default: *primerdb
    desc: primer database name
  fg_genome_fp: 
    default: *fg
    desc: path to foreground (aka target) genome  
  bg_genome_fp:
    default: *bg
    desc: path to background genome
  max_primers:
    default: 200
    desc: max number of primers to keep after filtering
    type: int
  bg_length:
    default: *bglen
    desc: length of the background genome (autofilled by swga init)
    type: int
  fg_length:
    default: *fglen
    desc: length of the foreground genome (autofilled by swga init)
    type: int
  min_fg_bind:
    default: *fgbind
    desc: minimum number of primer binding sites on fg genome (default autofilled using genome length and binding rate of 1/100000)
    type: int
  max_bg_bind:
    default: *bgbind
    desc: maximum primer binding sites on bg genome (default autofilled using genome length and binding rate of 1/150000)
    type: int
  min_tm:
    default: 0
    desc: minimum primer melting temperature (C)
    type: float
  max_tm:
    default: 100
    desc: maximum primer melting temperature (C)
    type: float

find_sets:
  META:
    desc: Find sets of compatible primers in a primer compatibility graph
  primer_db:
    default: *primerdb
    desc: primer database name
  min_size:
    default: 2
    desc: minimum size of primer sets
  max_size:
    default: 7
    desc: max size of primer sets
  max_dimer_bp:
    default: 3
    desc: max number of consecutive complimentary bases between two primers
    type: int
  min_bg_bind_dist:
    default: 30000
    desc: min avg distance between primers in the bg genome
  bg_genome_len:
    default: *bglen
    desc: length of background genome (autofilled by swga init)
  fg_genome_fp: 
    default: *fg
    desc: path to foreground (aka target) genome  
  max_fg_bind_dist:
    default: 36000
    desc: Max distance between primers on the foreground genome
    type: int
  max_sets:
    default: 500
    desc: Max number of sets to check
    type: int
  reset:
    incfg: False
    desc: remove all previously-found sets
    opttype: flag
  workers:
    default: 1
    desc: >
      number of workers to spawn. 1 worker searches graph using weighted vertex coloring;
      > 1 workers randomizes vertex coloring to explore more area simultaneously.
    type: int
    
    


score:
  META:
    desc: score a set of primers
  primer_db:
    default: *primerdb
    desc: primer database name
  fg_genome_fp: 
    default: *fg
    desc: path to foreground (aka target) genome
  bg_genome_fp:
    default: *bg
    desc: path to background genome
  bg_genome_len:
    default: *bglen
    desc: length of background genome (autofilled by swga init)
  input:
    default: null
    desc: a file containing a list of primers to score, one per line
    type: File-r
    incfg: False
  score_expression:
    default: "(fg_dist_mean * fg_dist_gini) / (bg_ratio)"
    desc: >
      Specify an expression to calculate the set score. Code must only use the
      following variables: set_size, fg_dist_mean, fg_dist_std, fg_dist_gini,
      fg_dist_max, bg_ratio. Expression must have valid Python syntax.



export:
  META:
    desc: retrieve or export primers or sets from the database
  what:
    incfg: False
    default: sets
    desc: what to export (sets, primers, bedfile)
    opttype: arg
    choices: {set, sets, primer, primers, bedfile, bedgraph}
  primer_db:
    default: *primerdb
    desc: primer database name
  output:
    default: stdout
    desc: where to write results
    type: File-w
    incfg: False
  order_by:
    incfg: False
    default: null
    desc: order the results (before any limits imposed)
  descending:
    incfg: False
    desc: return in descending order if --order_by specified
    opttype: flag
  limit:
    incfg: False
    default: -1
    desc: max results to display, at max (values less than zero mean no limit)
    type: int
  ids:
    incfg: False
    default: null
    desc: the ids of the sets or primers to use
    type: int
    nargs: '*'
  no_header:
    incfg: False
    desc: "don't display header"
    opttype: flag
  opts_str:
    incfg: False
    desc: (bedgraph export only) the options string to add to the track line
    type: str
  window_size:
    default: 10000
    desc: (bedgraph export only) the size of the sliding window used to calculate avg primer binding
    type: float
  step_size:
    incfg: False
    desc: "(bedgraph export only) the step size used to move the sliding window (default: window_size/5)"
  output_folder:
    incfg: False
    desc: (bed* export only) the folder to store the bedgraph or bedfiles
    type: str
  fg_genome_fp:
    default: *fg
    desc: (bed* export only) path to foreground genome (autofilled)
      
setopt:
  META:
    desc: change a value in the parameters file
    incfg: False
  command:
    default: null
    desc: the command whose option is being modified
    opttype: arg
  opt:
    default: null
    desc: the option to change
    opttype: arg
  value:
    default: null
    desc: the new value of the option
    opttype: arg

activate:
  META:
    desc: activate a list of primers, updating melting temp and fg binding locations as needed
  input:
    default: null
    desc: a file containing a list of primers to score, one per line
    type: File-r
    opttype: arg
    incfg: False
  reset:
    desc: reset what primers are marked as active
    opttype: flag
    incfg: False
  primer_db:
    default: *primerdb
    desc: primer database name
  fg_genome_fp: 
    default: *fg
    desc: path to foreground (aka target) genome  
  bg_genome_fp:
    default: *bg
    desc: path to background genome
